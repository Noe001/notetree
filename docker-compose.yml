services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL}
      JWT_SECRET: ${JWT_SECRET}
      NEXT_PUBLIC_ENABLE_MOCK: ${NEXT_PUBLIC_ENABLE_MOCK}
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      INTERNAL_API_TOKEN: ${INTERNAL_API_TOKEN}
    restart: always
    command: sh -c "npx prisma migrate deploy && npm run start"
    depends_on:
      db:
        condition: service_healthy

  websocket-server:
    build:
      context: ./websocket-server
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      WS_PORT: 3001
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_URL: ${DATABASE_URL}
      API_URL: http://frontend:3000
      INTERNAL_API_TOKEN: ${INTERNAL_API_TOKEN}
    restart: always
    depends_on:
      - db
      - frontend

  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db_data:
